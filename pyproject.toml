[build-system]
requires = ["setuptools>=61.0", "wheel", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[project]
name = "Divisualisation"
authors = [
    {name = "Benjamin Gallusser", email = "bgallusser@gmail.com"}
]
license = {text = "MIT License"}
description = "Visualize cell tracking errors"
readme = "README.md"
requires-python = ">=3.10"
dynamic = ["version"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

dependencies = [
    "napari",
    "napari-animation",
    "numpy",
    "networkx",
    "traccuracy",
]

[project.optional-dependencies]
dev = [
    "pytest",
    "ruff",
    "mypy",
    "pre-commit",
    "twine",
    "build",
]

[tool.setuptools]
package-dir = {"" = "src"}
packages = ["divisualisation"]
include-package-data = true

[tool.ruff]
target-version = "py311"
src = ["src", "tests"]

[tool.ruff.lint]
select = [
    "F",   # pyflakes
    "E",   # pycodestyle
    "I",   # isort
    "UP",  # pyupgrade
    "RUF", # ruff specific rules
    "D",   # pydocstyle
]
ignore = [
    "D100", # Missing docstring in public mod
    "D101", # Missing docstring in public class
    "D102", # Missing docstring in public method
    "D103", # Missing docstring in public function
    "D104", # Missing docstring in public package
    "D105", # Missing docstring in magic method
    "D107", # Missing docstring in `__init__`
    "D205", # 1 blank line required between summary line and description
    "D417", # Missing argument description in docstring
    "E402", # Module level import not at top of file
    "E501", # Line too long
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D"]
"__init__.py" = ["F401"]

[tool.pytest.ini_options]
addopts = "-v -s"

[tool.setuptools_scm]
write_to = "src/divisualisation/_version.py"